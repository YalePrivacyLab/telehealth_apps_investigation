digraph {
	graph [diredgeconstraints=true overlap=orthoxy splines=ortho]
	node [color="#ece5f6" fontcolor="#593196" fontname="sans-serif" fontsize=10 shape=box style=filled]
	edge [color="#593196"]
	"Landroid/net/ConnectivityManager;->getActiveNetworkInfo()" [color="#593196" fontcolor=white]
	"Landroid/net/ConnectivityManager;->getNetworkInfo()" [color="#593196" fontcolor=white]
	"Landroid/net/ConnectivityManager;->getNetworkInfo()" [color="#593196" fontcolor=white]
	"Landroid/net/ConnectivityManager;->getAllNetworks()" [color="#593196" fontcolor=white]
	"Landroid/net/ConnectivityManager;->getNetworkInfo()" [color="#593196" fontcolor=white]
	"Landroid/net/ConnectivityManager;->getNetworkInfo()" [color="#593196" fontcolor=white]
	subgraph cluster_entrypoints {
		label=Entrypoints
		shape=box
		color="#593196"
		fontcolor="#593196"
		fontsize=14
		margin=6
		fontname="sans-serif"
		labeljust=l
		subgraph "cluster_*" {
			label="*"
			color="#ece5f6"
			style=filled
			margin=5
			fontcolor="#593196"
			fontsize=12
			fontname="sans-serif"
			labeljust=l
			"Lorg/webrtc/NetworkMonitorAutoDetect$SimpleNetworkCallback;->onAvailable()" [color="#a991d4" fontcolor=white]
			"Lcom/google/android/datatransport/cct/CctTransportBackend;->decorate()" [color="#a991d4" fontcolor=white]
			"Lcom/reactnativecommunity/netinfo/BroadcastReceiverConnectivityReceiver;->register()" [color="#a991d4" fontcolor=white]
			"Lorg/webrtc/NetworkMonitor;->createAndSetAutoDetectForTest()" [color="#a991d4" fontcolor=white]
			"Lorg/webrtc/NetworkMonitor;->getCurrentDefaultNetId()" [color="#a991d4" fontcolor=white]
			"Lcom/reactnativecommunity/netinfo/ConnectivityReceiver;->updateConnectivity()" [color="#a991d4" fontcolor=white]
			"Lorg/webrtc/NetworkMonitorAutoDetect$SimpleNetworkCallback;->onLinkPropertiesChanged()" [color="#a991d4" fontcolor=white]
			"Lcom/reactnativecommunity/netinfo/NetInfoModule;->getCurrentState()" [color="#a991d4" fontcolor=white]
			"Lio/branch/referral/ServerRequestInitSession;->setPost()" [color="#a991d4" fontcolor=white]
			"Lorg/webrtc/NetworkMonitorAutoDetect$SimpleNetworkCallback;->onCapabilitiesChanged()" [color="#a991d4" fontcolor=white]
			"Lcom/onesignal/FocusTimeController$FocusTimeProcessorBase;->syncUnsentTimeOnBackgroundEvent()" [color="#a991d4" fontcolor=white]
			"Lcom/reactnativecommunity/netinfo/BroadcastReceiverConnectivityReceiver;->getCurrentState()" [color="#a991d4" fontcolor=white]
			"Lorg/webrtc/NetworkMonitor;->startMonitoring()" [color="#a991d4" fontcolor=white]
			"Lorg/webrtc/NetworkMonitor;->startMonitoring()" [color="#a991d4" fontcolor=white]
			"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->reset()" [color="#a991d4" fontcolor=white]
			"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->identify()" [color="#a991d4" fontcolor=white]
			"Landroidx/core/net/ConnectivityManagerCompat;->getNetworkInfoFromBroadcast()" [color="#a991d4" fontcolor=white]
			"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->disable()" [color="#a991d4" fontcolor=white]
			"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->group()" [color="#a991d4" fontcolor=white]
			"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->getAnonymousId()" [color="#a991d4" fontcolor=white]
			"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->setup()" [color="#a991d4" fontcolor=white]
			"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->screen()" [color="#a991d4" fontcolor=white]
			"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->alias()" [color="#a991d4" fontcolor=white]
			"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->enable()" [color="#a991d4" fontcolor=white]
			"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->flush()" [color="#a991d4" fontcolor=white]
			"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->track()" [color="#a991d4" fontcolor=white]
			"Lcom/reactnativecommunity/netinfo/NetworkCallbackConnectivityReceiver$ConnectivityNetworkCallback;->onCapabilitiesChanged()" [color="#a991d4" fontcolor=white]
			"Lcom/reactnativecommunity/netinfo/NetworkCallbackConnectivityReceiver$ConnectivityNetworkCallback;->onLosing()" [color="#a991d4" fontcolor=white]
			"Lcom/reactnativecommunity/netinfo/NetworkCallbackConnectivityReceiver$ConnectivityNetworkCallback;->onUnavailable()" [color="#a991d4" fontcolor=white]
			"Lcom/reactnativecommunity/netinfo/NetworkCallbackConnectivityReceiver$ConnectivityNetworkCallback;->onAvailable()" [color="#a991d4" fontcolor=white]
			"Lcom/reactnativecommunity/netinfo/NetworkCallbackConnectivityReceiver$ConnectivityNetworkCallback;->onLinkPropertiesChanged()" [color="#a991d4" fontcolor=white]
			"Lcom/reactnativecommunity/netinfo/NetworkCallbackConnectivityReceiver$ConnectivityNetworkCallback;->onLost()" [color="#a991d4" fontcolor=white]
		}
		subgraph cluster_thread {
			label=Thread
			color="#ece5f6"
			style=filled
			margin=5
			fontcolor="#593196"
			fontsize=12
			fontname="sans-serif"
			labeljust=l
			"Lcom/google/firebase/messaging/SyncTask;->run()" [color="#a991d4" fontcolor=white]
			"Lcom/onesignal/OneSignalSyncServiceUtils$SyncRunnable;->run()" [color="#a991d4" fontcolor=white]
			"Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader$$Lambda$1;->run()" [color="#a991d4" fontcolor=white]
			"Lcom/segment/analytics/SegmentIntegration$3;->run()" [color="#a991d4" fontcolor=white]
			"Lcom/onesignal/OneSignal$7;->run()" [color="#a991d4" fontcolor=white]
			"Lcom/google/firebase/messaging/TopicsSyncTask;->run()" [color="#a991d4" fontcolor=white]
			"Lcom/google/firebase/iid/SyncTask;->run()" [color="#a991d4" fontcolor=white]
		}
		subgraph cluster_handler {
			label=Handler
			color="#ece5f6"
			style=filled
			margin=5
			fontcolor="#593196"
			fontsize=12
			fontname="sans-serif"
			labeljust=l
			"Lcom/segment/analytics/SegmentIntegration$SegmentDispatcherHandler;->handleMessage()" [color="#a991d4" fontcolor=white]
		}
		subgraph cluster_receiver {
			label=Receiver
			color="#ece5f6"
			style=filled
			margin=5
			fontcolor="#593196"
			fontsize=12
			fontname="sans-serif"
			labeljust=l
			"Lcom/reactnativecommunity/netinfo/BroadcastReceiverConnectivityReceiver$ConnectivityBroadcastReceiver;->onReceive()" [color="#a991d4" fontcolor=white]
			"Lcom/google/firebase/messaging/TopicsSyncTask$ConnectivityChangeReceiver;->onReceive()" [color="#a991d4" fontcolor=white]
			"Lcom/google/firebase/iid/SyncTask$ConnectivityChangeReceiver;->onReceive()" [color="#a991d4" fontcolor=white]
			"Lorg/webrtc/NetworkMonitorAutoDetect;->onReceive()" [color="#a991d4" fontcolor=white]
			"Lcom/google/firebase/messaging/SyncTask$ConnectivityChangeReceiver;->onReceive()" [color="#a991d4" fontcolor=white]
		}
	}
	"Lio/branch" -> "Landroid/net/ConnectivityManager;->getActiveNetworkInfo()" [constraint=true]
	"Lcom/google" -> "Landroid/net/ConnectivityManager;->getActiveNetworkInfo()" [constraint=true]
	"Lorg/webrtc/NetworkMonitorAutoDetect$SimpleNetworkCallback;->onAvailable()" -> Lorg [constraint=true]
	Lorg -> "Landroid/net/ConnectivityManager;->getActiveNetworkInfo()" [constraint=true]
	Lorg -> "Landroid/net/ConnectivityManager;->getNetworkInfo()" [constraint=true]
	Lorg -> "Landroid/net/ConnectivityManager;->getAllNetworks()" [constraint=true]
	"Lcom/google/firebase/messaging/SyncTask;->run()" -> "Lcom/google" [constraint=true]
	"Lcom/google/android/datatransport/cct/CctTransportBackend;->decorate()" -> "Landroid/net/ConnectivityManager;->getActiveNetworkInfo()" [constraint=true]
	"Lcom/reactnativecommunity/netinfo/BroadcastReceiverConnectivityReceiver;->register()" -> "Lcom/reactnativecommunity" [constraint=true]
	"Lcom/reactnativecommunity" -> "Landroid/net/ConnectivityManager;->getActiveNetworkInfo()" [constraint=true]
	"Lcom/reactnativecommunity" -> "Landroidx/core" [constraint=true]
	"Lcom/reactnativecommunity" -> "Landroid/net/ConnectivityManager;->getNetworkInfo()" [constraint=true]
	"Landroidx/core" -> "Landroid/net/ConnectivityManager;->getActiveNetworkInfo()" [constraint=true]
	"Lorg/webrtc/NetworkMonitor;->createAndSetAutoDetectForTest()" -> Lorg [constraint=true]
	"Lcom/reactnativecommunity/netinfo/BroadcastReceiverConnectivityReceiver$ConnectivityBroadcastReceiver;->onReceive()" -> "Lcom/reactnativecommunity" [constraint=true]
	"Lcom/onesignal/OneSignalSyncServiceUtils$SyncRunnable;->run()" -> Lcom [constraint=true]
	Lcom -> "Landroid/net/ConnectivityManager;->getActiveNetworkInfo()" [constraint=true]
	"Lcom/segment" -> "Landroid/net/ConnectivityManager;->getActiveNetworkInfo()" [constraint=true]
	"Lcom/segment" -> "Landroid/net/ConnectivityManager;->getNetworkInfo()" [constraint=true]
	"Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader$$Lambda$1;->run()" -> "Lcom/google" [constraint=true]
	"Lcom/segment/analytics/SegmentIntegration$3;->run()" -> "Lcom/segment" [constraint=true]
	"Lcom/onesignal/OneSignal$7;->run()" -> Lcom [constraint=true]
	"Lcom/google/firebase/messaging/TopicsSyncTask;->run()" -> "Lcom/google" [constraint=true]
	"Lorg/webrtc/NetworkMonitor;->getCurrentDefaultNetId()" -> Lorg [constraint=true]
	"Lorg/webrtc/NetworkMonitor;->startMonitoring()" -> Lorg [constraint=true]
	"Lcom/reactnativecommunity/netinfo/ConnectivityReceiver;->updateConnectivity()" -> "Lcom/reactnativecommunity" [constraint=true]
	"Lorg/webrtc/NetworkMonitorAutoDetect$SimpleNetworkCallback;->onLinkPropertiesChanged()" -> Lorg [constraint=true]
	"Lcom/google/firebase/messaging/TopicsSyncTask$ConnectivityChangeReceiver;->onReceive()" -> "Lcom/google" [constraint=true]
	"Lcom/google/firebase/iid/SyncTask$ConnectivityChangeReceiver;->onReceive()" -> "Lcom/google" [constraint=true]
	"Lcom/reactnativecommunity/netinfo/NetInfoModule;->getCurrentState()" -> "Lcom/reactnativecommunity" [constraint=true]
	"Lcom/segment/analytics/SegmentIntegration$SegmentDispatcherHandler;->handleMessage()" -> "Lcom/segment" [constraint=true]
	"Lorg/webrtc/NetworkMonitorAutoDetect;->onReceive()" -> Lorg [constraint=true]
	"Lcom/google/firebase/iid/SyncTask;->run()" -> "Lcom/google" [constraint=true]
	"Lcom/google/firebase/messaging/SyncTask$ConnectivityChangeReceiver;->onReceive()" -> "Lcom/google" [constraint=true]
	"Lio/branch/referral/ServerRequestInitSession;->setPost()" -> "Lio/branch" [constraint=true]
	"Lorg/webrtc/NetworkMonitorAutoDetect$SimpleNetworkCallback;->onCapabilitiesChanged()" -> Lorg [constraint=true]
	"Lcom/onesignal/FocusTimeController$FocusTimeProcessorBase;->syncUnsentTimeOnBackgroundEvent()" -> Lcom [constraint=true]
	"Lcom/reactnativecommunity/netinfo/BroadcastReceiverConnectivityReceiver;->getCurrentState()" -> "Lcom/reactnativecommunity" [constraint=true]
	"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->reset()" -> "Lcom/segment" [constraint=true]
	"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->identify()" -> "Lcom/segment" [constraint=true]
	"Landroidx/core/net/ConnectivityManagerCompat;->getNetworkInfoFromBroadcast()" -> "Landroid/net/ConnectivityManager;->getNetworkInfo()" [constraint=true]
	"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->disable()" -> "Lcom/segment" [constraint=true]
	"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->group()" -> "Lcom/segment" [constraint=true]
	"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->getAnonymousId()" -> "Lcom/segment" [constraint=true]
	"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->setup()" -> "Lcom/segment" [constraint=true]
	"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->screen()" -> "Lcom/segment" [constraint=true]
	"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->alias()" -> "Lcom/segment" [constraint=true]
	"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->enable()" -> "Lcom/segment" [constraint=true]
	"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->flush()" -> "Lcom/segment" [constraint=true]
	"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->track()" -> "Lcom/segment" [constraint=true]
	"Lcom/reactnativecommunity/netinfo/NetworkCallbackConnectivityReceiver$ConnectivityNetworkCallback;->onCapabilitiesChanged()" -> "Lcom/reactnativecommunity" [constraint=true]
	"Lcom/reactnativecommunity/netinfo/NetworkCallbackConnectivityReceiver$ConnectivityNetworkCallback;->onLosing()" -> "Lcom/reactnativecommunity" [constraint=true]
	"Lcom/reactnativecommunity/netinfo/NetworkCallbackConnectivityReceiver$ConnectivityNetworkCallback;->onUnavailable()" -> "Lcom/reactnativecommunity" [constraint=true]
	"Lcom/reactnativecommunity/netinfo/NetworkCallbackConnectivityReceiver$ConnectivityNetworkCallback;->onAvailable()" -> "Lcom/reactnativecommunity" [constraint=true]
	"Lcom/reactnativecommunity/netinfo/NetworkCallbackConnectivityReceiver$ConnectivityNetworkCallback;->onLinkPropertiesChanged()" -> "Lcom/reactnativecommunity" [constraint=true]
	"Lcom/reactnativecommunity/netinfo/NetworkCallbackConnectivityReceiver$ConnectivityNetworkCallback;->onLost()" -> "Lcom/reactnativecommunity" [constraint=true]
	subgraph cluster_other_entrypoints {
		"Lorg/webrtc/NetworkMonitorAutoDetect$SimpleNetworkCallback;->onAvailable()" [color="#a991d4" fontcolor=white]
		"Lcom/google/android/datatransport/cct/CctTransportBackend;->decorate()" [color="#a991d4" fontcolor=white]
		"Lcom/reactnativecommunity/netinfo/BroadcastReceiverConnectivityReceiver;->register()" [color="#a991d4" fontcolor=white]
		"Lorg/webrtc/NetworkMonitor;->createAndSetAutoDetectForTest()" [color="#a991d4" fontcolor=white]
		"Lorg/webrtc/NetworkMonitor;->getCurrentDefaultNetId()" [color="#a991d4" fontcolor=white]
		"Lcom/reactnativecommunity/netinfo/ConnectivityReceiver;->updateConnectivity()" [color="#a991d4" fontcolor=white]
		"Lorg/webrtc/NetworkMonitorAutoDetect$SimpleNetworkCallback;->onLinkPropertiesChanged()" [color="#a991d4" fontcolor=white]
		"Lcom/reactnativecommunity/netinfo/NetInfoModule;->getCurrentState()" [color="#a991d4" fontcolor=white]
		"Lio/branch/referral/ServerRequestInitSession;->setPost()" [color="#a991d4" fontcolor=white]
		"Lorg/webrtc/NetworkMonitorAutoDetect$SimpleNetworkCallback;->onCapabilitiesChanged()" [color="#a991d4" fontcolor=white]
		"Lcom/onesignal/FocusTimeController$FocusTimeProcessorBase;->syncUnsentTimeOnBackgroundEvent()" [color="#a991d4" fontcolor=white]
		"Lcom/reactnativecommunity/netinfo/BroadcastReceiverConnectivityReceiver;->getCurrentState()" [color="#a991d4" fontcolor=white]
		"Lorg/webrtc/NetworkMonitor;->startMonitoring()" [color="#a991d4" fontcolor=white]
		"Lorg/webrtc/NetworkMonitor;->startMonitoring()" [color="#a991d4" fontcolor=white]
		"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->reset()" [color="#a991d4" fontcolor=white]
		"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->identify()" [color="#a991d4" fontcolor=white]
		"Landroidx/core/net/ConnectivityManagerCompat;->getNetworkInfoFromBroadcast()" [color="#a991d4" fontcolor=white]
		"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->disable()" [color="#a991d4" fontcolor=white]
		"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->group()" [color="#a991d4" fontcolor=white]
		"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->getAnonymousId()" [color="#a991d4" fontcolor=white]
		"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->setup()" [color="#a991d4" fontcolor=white]
		"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->screen()" [color="#a991d4" fontcolor=white]
		"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->alias()" [color="#a991d4" fontcolor=white]
		"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->enable()" [color="#a991d4" fontcolor=white]
		"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->flush()" [color="#a991d4" fontcolor=white]
		"Lcom/segment/analytics/reactnative/core/RNAnalyticsModule;->track()" [color="#a991d4" fontcolor=white]
		"Lcom/reactnativecommunity/netinfo/NetworkCallbackConnectivityReceiver$ConnectivityNetworkCallback;->onCapabilitiesChanged()" [color="#a991d4" fontcolor=white]
		"Lcom/reactnativecommunity/netinfo/NetworkCallbackConnectivityReceiver$ConnectivityNetworkCallback;->onLosing()" [color="#a991d4" fontcolor=white]
		"Lcom/reactnativecommunity/netinfo/NetworkCallbackConnectivityReceiver$ConnectivityNetworkCallback;->onUnavailable()" [color="#a991d4" fontcolor=white]
		"Lcom/reactnativecommunity/netinfo/NetworkCallbackConnectivityReceiver$ConnectivityNetworkCallback;->onAvailable()" [color="#a991d4" fontcolor=white]
		"Lcom/reactnativecommunity/netinfo/NetworkCallbackConnectivityReceiver$ConnectivityNetworkCallback;->onLinkPropertiesChanged()" [color="#a991d4" fontcolor=white]
		"Lcom/reactnativecommunity/netinfo/NetworkCallbackConnectivityReceiver$ConnectivityNetworkCallback;->onLost()" [color="#a991d4" fontcolor=white]
	}
}
